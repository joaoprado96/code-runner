The MI8* address spaces are transactional monitors developed by Ita√∫. They operate similarly to CICS but are multitasking, with around 60 TCBs each. They receive messages via TCP/IP and initiate transactions that run Cobol and Assembler programs. These programs use the monitors for accessing VSAM, Db2, MQ, among other functions.

Mostly, the partitions with GRBE monitors are dedicated to these monitors, hence the consumption on these partitions is highly concentrated on them.

The specific transactional flow involves a transaction that lists a customer's statements. When a statement is extensive, the transaction is initiated multiple times, resulting in a high number of iterations (requests) and increased consumption. This flow runs online on the GRBE transactional monitors. This flow is characterized by generating extensive responses, often requiring multiple executions of the same transaction to compile a complete listing of the customer's transactions.

As this is a transaction with such characteristics, we have a key to turn off its execution. With it turned off, the channel stops requesting these transactions. We often turn it off in scenarios of contention. When I refer to iterations, I mean the number of times a transaction is executed. The flow was deactivated in the morning, and during the period you mentioned, it was activated.

Upon activation, an increase in consumption across all partitions you mentioned was expected, as these are the GRBE partitions containing the MI8* and MI9* address spaces. The unexpected behavior was that in the SCCC partition, there was a significantly higher increase in I/O time than in the other partitions, as shown in the graph I sent.

For measuring this I/O time, the GRBE transactional monitor records each transaction execution in a file log. This allows us to summarize the executions and capture the duration and start time of each transaction. With this information, we can determine the I/O times in minute granularity. It's a view from the transactional monitor of how long each file access in a transaction takes. Since all these functions are controlled by the GRBE monitors, the programs call functions from the monitor for file access. There are no direct calls from the Cobol programs, allowing for this control.

I hope this answers all your questions. Could you briefly provide a list of the SMF and Syslog records you need to continue the analysis, based on all this information?

I would like to thank you for your thorough analysis, which perfectly describes the entire Sysplex scenario.